<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright the State of the Netherlands

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see http://www.gnu.org/licenses/.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>nl.aerius</groupId>
    <artifactId>gwt-beans-codegen</artifactId>
    <version>1.0.0</version>
  </parent>

  <artifactId>gwt-beans-codegen-maven-plugin</artifactId>
  <name>GWT Bean Parser Generator Maven Plugin</name>
  <description>Maven plugin for code generation tools for GWT Bean Parser Generator</description>
  <packaging>maven-plugin</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <maven-plugin-api.version>3.9.9</maven-plugin-api.version>
    <maven-plugin-plugin.version>3.15.1</maven-plugin-plugin.version>
  </properties>

  <dependencies>
    <!-- Code generation -->
    <dependency>
      <groupId>nl.aerius</groupId>
      <artifactId>gwt-beans-codegen-core</artifactId>
      <version>1.0.0-SNAPSHOT</version>
    </dependency>

    <!-- Maven plugin dependencies -->
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>${maven-plugin-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <version>${maven-plugin-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugin-tools</groupId>
      <artifactId>maven-plugin-annotations</artifactId>
      <version>${maven-plugin-plugin.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <Implementation-Version>${project.version}_${buildDateTime}_${buildRevision}</Implementation-Version>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>${maven-plugin-plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!--
            Tests MUST run sequentially and without reused forks.
            Parallel execution (e.g., <parallel>classes</parallel>, <forkCount>>1, <reuseForks>true)
            caused inconsistent test failures (specifically in TypeAnalyzerTest related to classloading
            and exception handling) between local and CI environments.
            These settings ensure consistent behavior.
          -->
          <parallel>none</parallel>
          <threadCount>1</threadCount>
          <perCoreThreadCount>false</perCoreThreadCount>
          <useUnlimitedThreads>false</useUnlimitedThreads>
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
          <includes>
            <include>**/*Test.java</include>
            <include>**/*Tests.java</include>
          </includes>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
